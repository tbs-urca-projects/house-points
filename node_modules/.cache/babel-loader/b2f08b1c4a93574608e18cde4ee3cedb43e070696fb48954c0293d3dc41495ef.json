{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexg\\\\OneDrive\\\\Documents\\\\Codes\\\\urca-house-points\\\\src\\\\components\\\\barChart.tsx\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fs = require('fs');\nconst parseCSV = () => {\n  let csvData = '';\n  let array = [[\"\"]];\n  try {\n    csvData = fs.readFileSync(\"../csvs/House_Points_2023.csv\", {\n      encoding: 'utf8'\n    });\n    array = csvData.split(\"$\").map(function (line) {\n      return line.split(\",\");\n    });\n  } catch (e) {\n    console.error(e);\n  }\n  let points = [0, 0, 0, 0];\n  let house = 0;\n  let totalCount = 0;\n  for (let i = 1; i < array.length; i++) {\n    let count = \"\";\n    if (array[i][3] == \"\") {\n      i += 2;\n      points[house] = totalCount;\n      totalCount = 0;\n      house += 1;\n      continue;\n    }\n    for (let j = 0; j < array[i][9].length; j++) {\n      if (array[i][9][j] !== \"[\") {\n        count += array[i][9][j];\n      } else {\n        break;\n      }\n    }\n    totalCount += parseInt(count);\n  }\n  return {\n    \"Hawking\": points[0],\n    \"Mee\": points[1],\n    \"Orwell\": points[2],\n    \"Pankhurst\": points[3]\n  };\n};\nconst BarChart = () => {\n  let points = parseCSV();\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: {\n      colors: [\"#55a1d3\", \"#eeb60b\", \"#d2232a\", \"#3dad47\"],\n      xaxis: {\n        categories: [\"\"],\n        labels: {\n          style: {\n            fontSize: \"1px\"\n          }\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        style: {\n          fontFamily: \"Montserrat\",\n          fontWeight: \"bold\"\n        }\n      },\n      legend: {\n        fontFamily: \"Montserrat\",\n        fontSize: \"14pt\"\n      }\n    },\n    series: [{\n      name: \"Pankhurst\",\n      data: [points[\"Pankhurst\"]]\n    }, {\n      name: \"Mee\",\n      data: [points[\"Mee\"]]\n    }, {\n      name: \"Orwell\",\n      data: [points[\"Orwell\"]]\n    }, {\n      name: \"Hawking\",\n      data: [points[\"Hawking\"]]\n    }],\n    type: \"bar\",\n    height: \"100%\",\n    width: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["Chart","fs","require","parseCSV","csvData","array","readFileSync","encoding","split","map","line","e","console","error","points","house","totalCount","i","length","count","j","parseInt","BarChart","colors","xaxis","categories","labels","style","fontSize","dataLabels","enabled","fontFamily","fontWeight","legend","name","data"],"sources":["C:/Users/alexg/OneDrive/Documents/Codes/urca-house-points/src/components/barChart.tsx"],"sourcesContent":["import Chart from \"react-apexcharts\";\r\nconst fs = require ('fs')\r\n\r\nconst parseCSV = () => {\r\n    let csvData=''\r\n    let array = [[\"\"]]\r\n    try{\r\n        csvData = fs.readFileSync(\"../csvs/House_Points_2023.csv\",{encoding:'utf8'})\r\n        array = csvData.split(\"$\").map(function (line) {\r\n            return line.split(\",\");\r\n        });     \r\n    }catch (e){console.error(e) }\r\n\r\n    let points = [0, 0, 0, 0]\r\n    let house = 0\r\n    let totalCount = 0\r\n\r\n    for(let i=1; i<array.length; i++) {\r\n    let count = \"\";\r\n\r\n    if(array[i][3] == \"\") {\r\n        i+=2\r\n        points[house] = totalCount;\r\n        totalCount = 0;\r\n        house += 1;\r\n        continue\r\n    }\r\n\r\n    for(let j=0; j<array[i][9].length; j++) {   \r\n        if(array[i][9][j] !== \"[\") {\r\n            count += array[i][9][j]\r\n        }else {\r\n            break\r\n        }\r\n    }\r\n    totalCount += parseInt(count)\r\n    }\r\n\r\n    return {\"Hawking\": points[0], \"Mee\": points[1], \"Orwell\": points[2], \"Pankhurst\": points[3],}\r\n}\r\n\r\nconst BarChart = () => {\r\n\r\n    let points = parseCSV();\r\n    \r\n    return(\r\n        <Chart\r\n            options={{\r\n                colors:[\"#55a1d3\", \"#eeb60b\", \"#d2232a\", \"#3dad47\"],\r\n                xaxis: {\r\n                    categories: [\"\"],\r\n                    labels: {\r\n                        style: {\r\n                            fontSize: \"1px\"\r\n                        }\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    style: {\r\n                        fontFamily: \"Montserrat\",\r\n                        fontWeight: \"bold\"\r\n                    }\r\n                },\r\n                legend: {\r\n                    fontFamily: \"Montserrat\",\r\n                    fontSize: \"14pt\"\r\n                }\r\n            }}\r\n            series={[\r\n                {\r\n                    name: \"Pankhurst\",\r\n                    data: [points[\"Pankhurst\"]], \r\n                },\r\n                {\r\n                    name: \"Mee\",\r\n                    data: [points[\"Mee\"]], \r\n                },\r\n                {\r\n                    name: \"Orwell\",\r\n                    data: [points[\"Orwell\"]], \r\n                },\r\n                {\r\n                    name: \"Hawking\",\r\n                    data: [points[\"Hawking\"]], \r\n                },\r\n            ]}\r\n            type=\"bar\"\r\n            height=\"100%\"     \r\n            width=\"100%\"   \r\n        />    \r\n    );\r\n}\r\n\r\nexport default BarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}